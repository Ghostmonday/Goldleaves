name: CI/CD Pipeline

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
  REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python -m pytest tests/ -v

    - name: Run linting
      run: |
        python -m pip install black isort mypy
        black --check .
        isort --check-only .
        mypy . --ignore-missing-imports

  staging:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.REGISTRY_URL }}/goldleaves
        tags: |
          type=ref,event=tag
          type=ref,event=branch
          type=raw,value=staging-{{date 'YYYY-MM-DD'}}-{{sha}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Install flyctl
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Deploy to Fly.io staging
      run: |
        flyctl deploy --config infra/fly.toml --image ${{ secrets.REGISTRY_URL }}/goldleaves:staging-$(date +%Y-%m-%d)-${{ github.sha }}
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    - name: Verify deployment
      run: |
        sleep 30
        curl -f https://goldleaves-staging.fly.dev/health || exit 1
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
